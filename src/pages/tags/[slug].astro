---
import { CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { slugifyText, sortPosts } from '../../utils/'
import PostList from '../../components/PostList.astro'
import PreviousNextLinks from '../../components/PreviousNextLinks.astro'

// Generate a new path for every collection entry
export async function getStaticPaths() {
	const allPosts = await getCollection('posts')

	const allPostsSorted = sortPosts(allPosts)

	const tags: Set<string> = allPostsSorted.reduce((set, current) => {
		set.delete('')
		current.data.tags.forEach((tag) => set.add(tag))
		return set
	}, new Set(''))

	const tagsWithPosts: { [key: string]: CollectionEntry<'posts'>[] } = {}
	tags.forEach(
		(tag) =>
			(tagsWithPosts[tag] = allPostsSorted.filter((post) =>
				post.data.tags.includes(tag),
			)),
	)

	return [...tags].sort().map((tag, index, tags) => ({
		params: { slug: slugifyText(tag) },
		props: {
			tag,
			posts: tagsWithPosts[tag],
			previous: tags[index - 1],
			next: tags[index + 1],
		},
	}))
}

const { tag, posts, previous, next } = Astro.props
---

<BaseLayout
	title={`Posts tagged as “${tag}” — Duncan Ritchie’s blog`}
	description={`List of blogposts by Duncan Ritchie tagged as “${tag}”`}
	showBlogHomeLinkInFooter={true}
>
	<main>
		<h1>Posts tagged as “{tag}”</h1>
		<PostList posts={posts} />
		<PreviousNextLinks
			type="tag"
			previous={previous}
			previousUrl={import.meta.env.BASE_URL + 'tags/' + slugifyText(previous)}
			next={next}
			nextUrl={import.meta.env.BASE_URL + 'tags/' + slugifyText(next)}
		/>
	</main>
</BaseLayout>
