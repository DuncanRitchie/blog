---
import { type CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { addLinkBase, slugifyText, sortPosts } from '../../utils/'
import PostList from '../../components/PostList.astro'
import PreviousNextLinks from '../../components/PreviousNextLinks.astro'

// Generate a new path for every collection entry
export async function getStaticPaths() {
	const allPosts = await getCollection('posts')

	const allPostsSorted = sortPosts(allPosts)

	const tags: Set<string> = allPostsSorted.reduce((set, current) => {
		set.delete('')
		current.data.tags.forEach((tag) => set.add(tag))
		return set
	}, new Set(''))

	const tagsWithPosts: { [key: string]: CollectionEntry<'posts'>[] } = {}
	tags.forEach(
		(tag) =>
			(tagsWithPosts[tag] = allPostsSorted.filter((post) =>
				post.data.tags.includes(tag),
			)),
	)

	return [...tags]
		.sort((a, b) => (a.toLowerCase() > b.toLowerCase() ? 1 : -1))
		.map((tag, index, tags) => ({
			params: { slug: slugifyText(tag) },
			props: {
				tag,
				posts: tagsWithPosts[tag],
				previous: tags[index - 1],
				next: tags[index + 1],
			},
		}))
}

const { tag, posts, previous, next } = Astro.props
const rssUrl = addLinkBase('tags', slugifyText(tag), 'rss.xml')
---

<style>
	.rss {
		margin-top: 2rem;
	}
	/* Any click event on the <span> triggers the <a> link,
		because the link has a pseudo-element that covers the span.
		This means the RSS icon does not need to be inside the <a>
		element, as long as it’s inside the span. */
	.rss p span {
		position: relative;
	}
	.rss p span a::before {
		content: '';
		position: absolute;
		display: block;
		inset: 0;
		width: 100%;
		height: 100%;
		z-index: 1;
	}
	.rss p span img {
		height: 1em;
		aspect-ratio: 1 / 1;
		vertical-align: -0.2em;
	}
</style>

<BaseLayout
	title={`Posts tagged as “${tag}” — Duncan Ritchie’s blog`}
	description={`List of blogposts by Duncan Ritchie tagged as “${tag}”`}
	showBlogHomeLinkInFooter={true}
	showRssLinkInFooter={true}
>
	<main>
		<h1 style="viewTransitionName: tag-heading;">
			Posts tagged as “<span style={{ viewTransitionName: slugifyText(tag) }}
				>{tag}</span
			>”
		</h1>
		<PostList posts={posts} />
		<aside class="rss" style="view-transition-name: rss;">
			<p>
				<span>
					<img
						src={addLinkBase('images/rss-icon.svg')}
						alt=""
						width="16"
						aria-hidden="true"
					/>
					{' '}
					<a href={rssUrl}>RSS feed for the tag “{tag}”</a>
				</span>
			</p>
		</aside>
		<PreviousNextLinks
			type="tag"
			previous={previous}
			previousUrl={addLinkBase('tags', slugifyText(previous))}
			next={next}
			nextUrl={addLinkBase('tags', slugifyText(next))}
		/>
	</main>
</BaseLayout>
