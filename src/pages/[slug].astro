---
import { getCollection } from 'astro:content'

import PreviousNextLinks from '../components/PreviousNextLinks.astro'
import PostIntro from '../components/PostIntro.astro'
import BaseLayout from '../layouts/BaseLayout.astro'
import { slugifyPost, sortPosts } from '../utils'

export interface Props {
	data: {
		title: string
		date: string
		draft: boolean
		tags: string[]
	}
}

const { data } = Astro.props

const posts = await getCollection('posts')
const postsSorted = sortPosts(posts)
const postIndex = postsSorted.findIndex(
	(post) => Astro.props.post.id === post.id,
)
const previous = postsSorted[postIndex + 1]
const next = postsSorted[postIndex - 1]

const title = data?.title

// Generate a new path for every collection entry
export async function getStaticPaths() {
	const posts = await getCollection('posts')
	const postsSorted = sortPosts(posts)

	return postsSorted.map((post) => ({
		params: { slug: slugifyPost(post) },
		props: { post },
	}))
}

const { post } = Astro.props
const { Content } = await post.render()
---

<BaseLayout
	title={title + ' — Duncan Ritchie’s blog'}
	description={`Blogpost by Duncan Ritchie entitled “${title}”`}
	showBlogHomeLinkInFooter={true}
>
	<PostIntro data={post.data} />

	<main>
		<Content />
	</main>

	<PreviousNextLinks
		type="post"
		previous={previous?.data?.title}
		previousUrl={import.meta.env.BASE_URL + slugifyPost(previous)}
		next={next?.data?.title}
		nextUrl={import.meta.env.BASE_URL + slugifyPost(next)}
	/>
</BaseLayout>
