aside {
	border: 3px solid var(--colour6);
	margin: 1rem 2rem;
	padding: 0 1rem;
	font-size: 0.8rem;
}
aside:target {
	background: linear-gradient(135deg, var(--colour5), transparent);
}
/* Divs whose children are figures only */
div:has(> figure):not(:has(> :not(figure))) {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-wrap: wrap;
}
figure {
	/* If a figure is adjacent to another figure, the outlines will overlap so thereâ€™s no double line. */
	--outline-width: 3px;
	outline: var(--outline-width) solid var(--colour6);
	outline-offset: calc(var(--outline-width) / -2);
	border: calc(var(--outline-width) / 2) solid transparent;
	width: fit-content;
	max-width: 100%;
	float: center;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	font-size: smaller;
	display: flex;
	flex-direction: column;
}
figure div {
	margin: 0;
}
figcaption {
	padding: 0.25rem;
}
img {
	max-width: 100%;
}
i i {
	font-style: normal;
}
code {
	font-size: 0.9em;
}
pre {
	max-width: calc(100% - 1rem);
	overflow-x: auto;
	background-color: rgba(0, 0, 0, 0.1);
	border: 3px solid var(--colour6);
	padding: 0.5rem;
}
pre code,
pre samp {
	padding-right: 0.5rem;
	background: none;
}

*:not(:lang(en)):not(li *) {
	font-style: italic;
}

.auto-grid {
	/* Autosizing grid columns CSS is adapted from https://css-tricks.com/look-ma-no-media-queries-responsive-layouts-using-css-grid/#aa-the-article-list */
	display: grid;
	--min-column-width: 12rem;
	grid-template-columns: repeat(
		auto-fit,
		minmax(min(var(--min-column-width), 100%), 1fr)
	);
	gap: calc(1rem + 1.25vw);
	margin-top: 1.75rem;
}

ul.auto-grid {
	list-style: none;
	padding-left: 0;
}
ol.auto-grid {
	padding-left: 0;
	list-style-position: inside;
}

/* Allow elements such as figures to float left or right, if the viewport is wide enough. */
@media (min-width: 48rem) {
	.float-left {
		float: left;
		margin: 0 1rem 0 0;
	}

	.float-right {
		float: right;
		margin: 0 0 0 1rem;
	}
}

@media not (prefers-reduced-motion: reduce) {
	@view-transition {
		navigation: auto;
	}
	/* H1 headings transition into each other when navigating between pages.
	On some pages (eg blogposts) the H1 transition is overridden, with a new value for the CSS variable. */
	:root {
		--viewTransitionNameH1: 'h1';
	}
	h1 {
		view-transition-name: var(--viewTransitionNameH1);
	}
}
